name: "CI-Mac"
on:
  push:
    tags:
    - v*.*.*
  pull_request:
    branches:
    - main
  workflow_dispatch:  # Manual trigger

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  presubmit:
    name: "Presubmit-Mac"
    runs-on: macos-latest
    permissions:
      contents: write  # For gh release upload.
    env:
      GH_TOKEN: ${{ github.token }}  # For gh release upload.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore bazel cache
        uses: actions/cache/restore@v4
        id: bazel-cache
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazel-macos
            ~/.cache/bazel-ios
          key: ${{ github.workflow }}-${{ hashFiles('**/WORKSPACE') }}-${{ hashFiles('**/BUILD*') }}
          restore-keys: |
            ${{ github.workflow }}-${{ hashFiles('**/WORKSPACE') }}-
            ${{ github.workflow }}-

      - name: Check cache hit
        run: |
          echo "Cache Hit: ${{ steps.bazel-cache.outputs.cache-hit }}"
          echo "Cache Primary Key: ${{ steps.bazel-cache.outputs.cache-primary-key }}"
          echo "Cache Matched Key: ${{ steps.bazel-cache.outputs.cache-matched-key }}"

      - name: Run bazel build on MacOS
        run: |
          bazel build --disk_cache=~/.cache/bazel-macos //...

      - name: Update litert_lm_main prebuilt for MacOS if new version tag is pushed.
        if: github.ref_type == 'tag'
        run: |
          cp bazel-bin/runtime/engine/litert_lm_main litert_lm_main.macos_arm64
          gh release upload ${{ github.ref_name }} litert_lm_main.macos_arm64 --clobber

      - name: Run bazel test on MacOS
        run: |
          bazel test --disk_cache=~/.cache/bazel-macos --test_output=errors //...

      - name: Run bazel build for iOS Simulator
        run: |
          bazel build --disk_cache=~/.cache/bazel-ios --config=ios_sim_arm64 //...

      - name: Update litert_lm_main prebuilt for iOS Simulatorif new version tag is pushed.
        if: github.ref_type == 'tag'
        run: |
          cp bazel-bin/runtime/engine/litert_lm_main litert_lm_main.ios_sim_arm64
          gh release upload ${{ github.ref_name }} litert_lm_main.ios_sim_arm64 --clobber

      - name: Save bazel cache if new or changed on push.
        uses: actions/cache/save@v4
        if: ${{ steps.bazel-cache.outputs.cache-hit }} != 'true' || ${{ github.event_name }} == 'push'
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazel-macos
            ~/.cache/bazel-ios
          key: ${{ github.workflow }}-${{ hashFiles('**/WORKSPACE') }}-${{ hashFiles('**/BUILD*') }}
